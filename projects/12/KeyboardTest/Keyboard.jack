// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
		return;	
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		// 24576
		var char c;
		let c = Memory.peek(24576);
		if (c = 0) { return 0; }
		return c;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c, pressed;
		var boolean zero;
		let zero = true;
		while (zero) {
			let pressed = Keyboard.keyPressed();
			if (~(pressed = 0)) { let zero = false; }
		}
		let c = pressed;
		while (~(zero)) {
			let pressed = Keyboard.keyPressed();
			if (pressed = 0) { let zero = true; }
		}
		do Output.printChar(c);
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String entered;
		var char pressed;
		var boolean newline;
		let entered = String.new(64);
		let newline = false;
		do Output.printString(message);
		while (~(newline)) {
			let pressed = Keyboard.readChar();
			if (pressed = String.newLine()) { 
				do Output.println();
				let newline = true; 
			}
			else {
				if (pressed = String.backSpace()) {
					// do Output.backSpace();
					do entered.eraseLastChar();
				}
				else {
					// do Output.printChar(pressed);
					do entered.appendChar(pressed);
				}
			}
		}
		return entered;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var int int_entered;
		var String str_entered;
		let str_entered = Keyboard.readLine(message);
		return str_entered.intValue();		
    }
}
